syntax = "proto3";
package osmosis.gamm.v1beta1;

import "gogoproto/gogo.proto";
import "osmosis/gamm/v1beta1/pool.proto";
import "osmosis/gamm/v1beta1/tx.proto";
import "cosmos/base/v1beta1/coin.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "google/api/annotations.proto";
import "google/protobuf/any.proto";
import "cosmos_proto/cosmos.proto";

option go_package = "github.com/c-osmosis/osmosis/x/gamm/types";

service Query {
  rpc Pool(QueryPoolRequest) returns (QueryPoolResponse) {
    option (google.api.http).get = "/osmosis/gamm/v1beta1/{poolId}";
  }
  rpc Pools(QueryPoolsRequest) returns (QueryPoolsResponse) {
    option (google.api.http).get = "/osmosis/gamm/v1beta1/pools/all";
  }
  rpc TotalPools(QueryTotalPoolsRequest) returns (QueryTotalPoolsResponse) {
    option (google.api.http).get = "/osmosis/gamm/v1beta1/pools/total_pools";
  }
  rpc PoolParams(QueryPoolParamsRequest) returns (QueryPoolParamsResponse) {
    option (google.api.http).get = "/osmosis/gamm/v1beta1/{poolId}/params";
  }
  rpc TotalShare(QueryTotalShareRequest) returns (QueryTotalShareResponse) {
    option (google.api.http).get = "/osmosis/gamm/v1beta1/{poolId}/total_share";
  }
  rpc PoolAssets(QueryPoolAssetsRequest) returns (QueryPoolAssetsResponse) {
    option (google.api.http).get = "/osmosis/gamm/v1beta1/{poolId}/tokens";
  }
  rpc SpotPrice(QuerySpotPriceRequest) returns (QuerySpotPriceResponse) {
    option (google.api.http).get = "/osmosis/gamm/v1beta1/{poolId}/prices";
  }

  // Estimate the swap.
  rpc EstimateSwapExactAmountIn(QuerySwapExactAmountInRequest)
      returns (QuerySwapExactAmountInResponse) {
    option (google.api.http).get =
        "/osmosis/gamm/v1beta1/{poolId}/estimate/swap_exact_amount_in";
  }
  rpc EstimateSwapExactAmountOut(QuerySwapExactAmountOutRequest)
      returns (QuerySwapExactAmountOutResponse) {
    option (google.api.http).get =
        "/osmosis/gamm/v1beta1/{poolId}/estimate/swap_exact_amount_out";
  }
}

//=============================== Pool
message QueryPoolRequest {
  uint64 poolId = 1 [ (gogoproto.moretags) = "yaml:\"pool_id\"" ];
}
message QueryPoolResponse {
  google.protobuf.Any pool = 1
      [ (cosmos_proto.accepts_interface) = "AccountI" ];
}

//=============================== Pools
message QueryPoolsRequest {
  // pagination defines an optional pagination for the request.
  cosmos.base.query.v1beta1.PageRequest pagination = 2;
}
message QueryPoolsResponse {
  repeated google.protobuf.Any pools = 1
      [ (cosmos_proto.accepts_interface) = "AccountI" ];

  // pagination defines the pagination in the response.
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

//=============================== TotalPools
message QueryTotalPoolsRequest {}
message QueryTotalPoolsResponse {
  uint64 totalPools = 1 [ (gogoproto.moretags) = "yaml:\"total_pools\"" ];
}

//=============================== PoolParams
message QueryPoolParamsRequest {
  uint64 poolId = 1 [ (gogoproto.moretags) = "yaml:\"pool_id\"" ];
}
message QueryPoolParamsResponse {
  PoolParams params = 1 [ (gogoproto.nullable) = false ];
}

//=============================== TotalShare
message QueryTotalShareRequest {
  uint64 poolId = 1 [ (gogoproto.moretags) = "yaml:\"pool_id\"" ];
}
message QueryTotalShareResponse {
  cosmos.base.v1beta1.Coin totalShare = 1 [
    (gogoproto.moretags) = "yaml:\"total_share\"",
    (gogoproto.nullable) = false
  ];
}

//=============================== PoolAssets
message QueryPoolAssetsRequest {
  uint64 poolId = 1 [ (gogoproto.moretags) = "yaml:\"pool_id\"" ];
}
message QueryPoolAssetsResponse {
  repeated PoolAsset poolAssets = 1 [ (gogoproto.nullable) = false ];
}

//=============================== SpotPrice
message QuerySpotPriceRequest {
  uint64 poolId = 1 [ (gogoproto.moretags) = "yaml:\"pool_id\"" ];
  string tokenInDenom = 2 [ (gogoproto.moretags) = "yaml:\"token_in_denom\"" ];
  string tokenOutDenom = 3
      [ (gogoproto.moretags) = "yaml:\"token_out_denom\"" ];
  bool sansSwapFee = 4 [ (gogoproto.moretags) = "yaml:\"sans_swap_fee\"" ];
}
message QuerySpotPriceResponse {
  // String of the Dec. Ex) 10.203uatom
  string spotPrice = 1 [ (gogoproto.moretags) = "yaml:\"spot_price\"" ];
}

//=============================== EstimateSwapExactAmountIn
message QuerySwapExactAmountInRequest {
  string sender = 1 [ (gogoproto.moretags) = "yaml:\"sender\"" ];
  uint64 poolId = 2 [ (gogoproto.moretags) = "yaml:\"pool_id\"" ];
  string tokenIn = 3 [ (gogoproto.moretags) = "yaml:\"token_in\"" ];
  repeated SwapAmountInRoute routes = 4 [
    (gogoproto.moretags) = "yaml:\"routes\"",
    (gogoproto.nullable) = false
  ];
}

message QuerySwapExactAmountInResponse {
  string tokenOutAmount = 1 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.moretags) = "yaml:\"token_out_amount\"",
    (gogoproto.nullable) = false
  ];
}

//=============================== EstimateSwapExactAmountOut
message QuerySwapExactAmountOutRequest {
  string sender = 1 [ (gogoproto.moretags) = "yaml:\"sender\"" ];
  uint64 poolId = 2 [ (gogoproto.moretags) = "yaml:\"pool_id\"" ];
  repeated SwapAmountOutRoute routes = 3 [
    (gogoproto.moretags) = "yaml:\"routes\"",
    (gogoproto.nullable) = false
  ];
  string tokenOut = 4 [ (gogoproto.moretags) = "yaml:\"token_out\"" ];
}

message QuerySwapExactAmountOutResponse {
  string tokenInAmount = 1 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.moretags) = "yaml:\"token_in_amount\"",
    (gogoproto.nullable) = false
  ];
}
