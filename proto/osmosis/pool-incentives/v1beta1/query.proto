syntax = "proto3";
package osmosis.poolincentives.v1beta1;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "google/protobuf/duration.proto";

import "osmosis/pool-incentives/v1beta1/incentives.proto";

option go_package = "github.com/osmosis-labs/osmosis/x/pool-incentives/types";

service Query {
  // PotIds takes the pool id and returns the matching pot ids and durations
  rpc PotIds(QueryPotIdsRequest) returns (QueryPotIdsResponse) {
    option (google.api.http).get =
        "/osmosis/pool-incentives/v1beta1/pot-ids/{pool_id}";
  }

  rpc DistrInfo(QueryDistrInfoRequest) returns (QueryDistrInfoResponse) {
    option (google.api.http).get =
         "/osmosis/pool-incentives/v1beta1/distr_info";
  }

  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get =
         "/osmosis/pool-incentives/v1beta1/params";
  }

  rpc LockableDurations(QueryLockableDurationsRequest) returns (QueryLockableDurationsResponse) {
    option (google.api.http).get =
         "/osmosis/pool-incentives/v1beta1/lockable_durations";
  }

  rpc IncentivizedPools(QueryIncentivizedPoolsRequest) returns (QueryIncentivizedPoolsResponse) {
    option (google.api.http).get =
         "/osmosis/pool-incentives/v1beta1/incentivized_pools";
  }
}

message QueryPotIdsRequest {
  uint64 pool_id = 1 [ (gogoproto.moretags) = "yaml:\"pool_id\"" ];
}
message QueryPotIdsResponse {
  message PotIdWithDuration {
    uint64 pot_id = 1 [ (gogoproto.moretags) = "yaml:\"pot_id\"" ];
    google.protobuf.Duration duration = 2
        [ (gogoproto.nullable) = false, (gogoproto.stdduration) = true ];
  }

  repeated PotIdWithDuration pot_ids_with_duration = 1
      [ (gogoproto.moretags) = "yaml:\"pot_ids_with_duration\"" ];
}

message QueryDistrInfoRequest {
}
message QueryDistrInfoResponse {
  DistrInfo distr_info = 1 [
    (gogoproto.nullable) = false,
    (gogoproto.moretags) = "yaml:\"distr_info\""
  ];
}

message QueryParamsRequest {
}
message QueryParamsResponse {
  Params params = 1 [ (gogoproto.nullable) = false ];
}

message QueryLockableDurationsRequest {
}
message QueryLockableDurationsResponse {
  repeated google.protobuf.Duration lockable_durations = 1 [
    (gogoproto.nullable) = false,
    (gogoproto.stdduration) = true,
    (gogoproto.moretags) = "yaml:\"lockable_durations\""
  ];
}

message QueryIncentivizedPoolsRequest {
}
message IncentivizedPool {
  uint64 pool_id = 1 [ (gogoproto.moretags) = "yaml:\"pool_id\"" ];
  google.protobuf.Duration lockable_duration = 2 [
    (gogoproto.nullable) = false,
    (gogoproto.stdduration) = true,
    (gogoproto.moretags) = "yaml:\"lockable_duration\""
  ];
  uint64 pot_id = 3 [ (gogoproto.moretags) = "yaml:\"pot_id\"" ];
}
message QueryIncentivizedPoolsResponse {
  repeated IncentivizedPool incentivized_pools = 1 [
    (gogoproto.nullable) = false,
    (gogoproto.moretags) = "yaml:\"incentivized_pools\""
  ];
}
